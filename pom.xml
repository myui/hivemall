<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>io.github.myui</groupId>
	<artifactId>hivemall</artifactId>
	<version>0.4.2-rc.2</version>

	<name>Hivemall</name>
	<description>Scalable Machine Learning Library for Apache Hive</description>
	<url>https://github.com/myui/hivemall/</url>
	<inceptionYear>2013</inceptionYear>
	<organization>
		<name>Makoto YUI</name>
		<url>http://myui.github.io/</url>
	</organization>

	<licenses>
		<license>
			<name>Apache License, Version 2.0</name>
			<url>http://opensource.org/licenses/Apache-2.0</url>
			<distribution>repo</distribution>
		</license>
	</licenses>

	<scm>
		<url>https://github.com/myui/hivemall</url>
		<connection>scm:git:git@github.com:myui/hivemall.git</connection>
		<developerConnection>scm:git:git@github.com:myui/hivemall.git</developerConnection>
	</scm>

	<developers>
		<developer>
			<id>myui</id>
			<name>Makoto YUI</name>
			<email>yuin405@gmail.com</email>
			<url>http://myui.github.io/</url>
		</developer>
	</developers>

	<packaging>pom</packaging>

	<modules>
		<module>core</module>
		<module>nlp</module>
		<module>xgboost</module>
		<module>mixserv</module>
	</modules>

	<properties>
		<maven.build.timestamp.format>yyyy</maven.build.timestamp.format>
		<build.year>${maven.build.timestamp}</build.year>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<protobuf.version>2.5.0</protobuf.version>
		<protoc.path>${env.PROTOC_PATH}</protoc.path>
		<hive.version>0.13.0</hive.version>
		<scala.version>2.11.8</scala.version>
	</properties>

	<repositories>
		<repository>
			<id>cloudera</id>
			<url>https://repository.cloudera.com/artifactory/cloudera-repos/</url>
		</repository>
	</repositories>

	<distributionManagement>
		<snapshotRepository>
			<id>ossrh</id>
			<url>https://oss.sonatype.org/content/repositories/snapshots</url>
		</snapshotRepository>
	</distributionManagement>

	<profiles>
		<profile>
			<id>spark-2.0</id>
			<modules>
				<module>spark/spark-2.0</module>
				<module>spark/spark-common</module>
			</modules>
			<properties>
				<spark.version>2.0.0</spark.version>
			</properties>
		</profile>
		<profile>
			<id>spark-1.6</id>
			<modules>
				<module>spark/spark-1.6</module>
				<module>spark/spark-common</module>
			</modules>
			<properties>
				<spark.version>1.6.2</spark.version>
			</properties>
		</profile>
		<profile>
			<id>compile-xgboost</id>
			<build>
				<plugins>
					<plugin>
						<artifactId>exec-maven-plugin</artifactId>
						<groupId>org.codehaus.mojo</groupId>
						<executions>
							<execution>
								<id>native</id>
								<phase>generate-sources</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>./bin/build_xgboost.sh</executable>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>doclint-java8-disable</id>
			<activation>
				<jdk>[1.8,)</jdk>
			</activation>
			<properties>
				<javadoc.opts>-Xdoclint:none</javadoc.opts>
			</properties>
		</profile>
		<!-- start maven central -->
		<profile>
			<id>release-sign-artifacts</id>
			<activation>
				<property>
					<name>performRelease</name>
					<value>true</value>
				</property>
			</activation>
			<build>
				<plugins>
					<!-- sources.jar -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-source-plugin</artifactId>
						<executions>
							<execution>
								<id>attach-sources</id>
								<goals>
									<goal>jar</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<!-- javadoc.jar -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-javadoc-plugin</artifactId>
						<configuration>
							<locale>en_US</locale>
							<docencoding>UTF-8</docencoding>
							<show>protected</show>
							<linksource>true</linksource>
						</configuration>
						<executions>
							<execution>
								<id>attach-javadocs</id>
								<goals>
									<goal>jar</goal>
								</goals>
								<configuration>
									<!-- workaround for Java 8 -->
									<!-- see http://stackoverflow.com/questions/15886209/maven-is-not-working-in-java-8-when-javadoc-tags-are-incomplete -->
									<additionalparam>${javadoc.opts}</additionalparam>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<!-- gpg sign -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-gpg-plugin</artifactId>
						<version>1.5</version>
						<executions>
							<execution>
								<id>sign-artifacts</id>
								<phase>verify</phase>
								<goals>
									<goal>sign</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<!-- end maven central -->
	</profiles>

	<build>
		<directory>target</directory>
		<outputDirectory>target/classes</outputDirectory>
		<finalName>${project.artifactId}-${project.version}</finalName>
		<testOutputDirectory>target/test-classes</testOutputDirectory>

		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>net.revelc.code</groupId>
					<artifactId>formatter-maven-plugin</artifactId>
					<version>0.5.2</version>
					<configuration>
						<configFile>${project.parent.basedir}/resources/eclipse-style.xml</configFile>
						<encoding>UTF-8</encoding>
						<lineEnding>LF</lineEnding>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>

		<plugins>
			<plugin>
				<!-- mvn formatter:format -->
				<groupId>net.revelc.code</groupId>
				<artifactId>formatter-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>2.17</version>
				<configuration>
					<skipTests>${skipTests}</skipTests>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.1</version>
				<configuration>
					<source>1.7</source>
					<target>1.7</target>
					<debug>true</debug>
					<debuglevel>lines,vars,source</debuglevel>
					<encoding>UTF-8</encoding>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.14.1</version>
				<configuration>
					<enableAssertions>true</enableAssertions>
					<forkCount>1</forkCount>
					<reuseForks>false</reuseForks>
					<forkedProcessTimeoutInSeconds>600</forkedProcessTimeoutInSeconds>
					<argLine>-Xmx1536m -XX:+HeapDumpOnOutOfMemoryError</argLine>
					<failIfNoTests>false</failIfNoTests>
					<environmentVariables>
						<JAVA_HOME>${java.home}</JAVA_HOME>
						<MALLOC_ARENA_MAX>4</MALLOC_ARENA_MAX>
					</environmentVariables>
					<systemPropertyVariables>
						<java.net.preferIPv4Stack>true</java.net.preferIPv4Stack>
					</systemPropertyVariables>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<version>1.8</version>
				<executions>
					<execution>
						<id>regex-scala-property</id>
						<goals>
							<goal>regex-property</goal>
						</goals>
						<configuration>
							<name>scala.version.parsed</name>
							<value>${scala.version}</value>
							<regex>(\d+\.\d+)\.\d+</regex>
							<replacement>$1</replacement>
							<failIfNoMatch>true</failIfNoMatch>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!-- start coveralls -->
			<plugin>
				<groupId>org.eluder.coveralls</groupId>
				<artifactId>coveralls-maven-plugin</artifactId>
				<version>3.0.1</version>
				<configuration>
					<repoToken>RXTKmDWUmWX7lko5x3CRvGSacryzNIYiT</repoToken>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>cobertura-maven-plugin</artifactId>
				<version>2.6</version>
				<configuration>
					<format>xml</format>
					<maxmem>256m</maxmem>
					<!-- aggregated reports for multi-module projects -->
					<aggregate>true</aggregate>
				</configuration>
			</plugin>
			<!-- end overalls -->
			<!-- start sonatype deploy -->
			<!-- mvn clean deploy -DperformRelease=true -Dskiptests=true -Dmaven.test.skip=true -->
			<plugin>
				<groupId>org.sonatype.plugins</groupId>
				<artifactId>nexus-staging-maven-plugin</artifactId>
				<version>1.6.3</version>
				<extensions>true</extensions>
				<configuration>
					<serverId>ossrh</serverId>
					<nexusUrl>https://oss.sonatype.org/</nexusUrl>
					<autoReleaseAfterClose>true</autoReleaseAfterClose>
				</configuration>
			</plugin>
			<!-- end sonatype deploy -->
		</plugins>
	</build>

</project>
