-----------------------------------------------------------------------------
-- Hivemall: Hive scalable Machine Learning Library
-----------------------------------------------------------------------------

---------------------------
-- binary classification --
---------------------------

drop temporary function perceptron;
create temporary function perceptron as 'hivemall.classifier.PerceptronUDTF';

-- alias
drop temporary function train_perceptron;
create temporary function train_perceptron as 'hivemall.classifier.PerceptronUDTF';

drop temporary function train_pa;
create temporary function train_pa as 'hivemall.classifier.PassiveAggressiveUDTF';

drop temporary function train_pa1;
create temporary function train_pa1 as 'hivemall.classifier.PassiveAggressiveUDTF$PA1';

drop temporary function train_pa2;
create temporary function train_pa2 as 'hivemall.classifier.PassiveAggressiveUDTF$PA2';

drop temporary function train_cw;
create temporary function train_cw as 'hivemall.classifier.ConfidenceWeightedUDTF';

drop temporary function train_arow;
create temporary function train_arow as 'hivemall.classifier.AROWClassifierUDTF';

drop temporary function train_arowh;
create temporary function train_arowh as 'hivemall.classifier.AROWClassifierUDTF$AROWh';

drop temporary function train_scw;
create temporary function train_scw as 'hivemall.classifier.SoftConfideceWeightedUDTF$SCW1';

drop temporary function train_scw2;
create temporary function train_scw2 as 'hivemall.classifier.SoftConfideceWeightedUDTF$SCW2';

drop temporary function adagrad_rda;
create temporary function adagrad_rda as 'hivemall.classifier.AdaGradRDAUDTF';

-- alias
drop temporary function train_adagrad_rda;
create temporary function train_adagrad_rda as 'hivemall.classifier.AdaGradRDAUDTF';

--------------------------------
--  Multiclass classification --
-------------------------------- 

drop temporary function train_multiclass_perceptron;
create temporary function train_multiclass_perceptron as 'hivemall.classifier.multiclass.MulticlassPerceptronUDTF';

drop temporary function train_multiclass_pa;
create temporary function train_multiclass_pa as 'hivemall.classifier.multiclass.MulticlassPassiveAggressiveUDTF';

drop temporary function train_multiclass_pa1;
create temporary function train_multiclass_pa1 as 'hivemall.classifier.multiclass.MulticlassPassiveAggressiveUDTF$PA1';

drop temporary function train_multiclass_pa2;
create temporary function train_multiclass_pa2 as 'hivemall.classifier.multiclass.MulticlassPassiveAggressiveUDTF$PA2';

drop temporary function train_multiclass_cw;
create temporary function train_multiclass_cw as 'hivemall.classifier.multiclass.MulticlassConfidenceWeightedUDTF';

drop temporary function train_multiclass_arow;
create temporary function train_multiclass_arow as 'hivemall.classifier.multiclass.MulticlassAROWClassifierUDTF';

drop temporary function train_multiclass_scw;
create temporary function train_multiclass_scw as 'hivemall.classifier.multiclass.MulticlassSoftConfidenceWeightedUDTF$SCW1';

drop temporary function train_multiclass_scw2;
create temporary function train_multiclass_scw2 as 'hivemall.classifier.multiclass.MulticlassSoftConfidenceWeightedUDTF$SCW2';

------------------------
-- distance functions --
------------------------

drop temporary function cosine_sim;
create temporary function cosine_sim as 'hivemall.knn.distance.CosineSimilarityUDF';

drop temporary function hamming_distance;
create temporary function hamming_distance as 'hivemall.knn.distance.HammingDistanceUDF';

drop temporary function jaccard;
create temporary function jaccard as 'hivemall.knn.distance.JaccardIndexUDF';

drop temporary function popcnt;
create temporary function popcnt as 'hivemall.knn.distance.PopcountUDF';

drop temporary function kld;
create temporary function kld as 'hivemall.knn.distance.KLDivergenceUDF';

-------------------
-- LSH functions --
-------------------

drop temporary function minhashes;
create temporary function minhashes as 'hivemall.knn.lsh.MinHashesUDF';

drop temporary function minhash;
create temporary function minhash as 'hivemall.knn.lsh.MinHashUDTF';

drop temporary function bbit_minhash;
create temporary function bbit_minhash as 'hivemall.knn.lsh.bBitMinHashUDF';

----------------------
-- voting functions --
----------------------

drop temporary function voted_avg;
create temporary function voted_avg as 'hivemall.ensemble.bagging.VotedAvgUDAF';

drop temporary function weight_voted_avg;
create temporary function weight_voted_avg as 'hivemall.ensemble.bagging.WeightVotedAvgUDAF';

-- alias of weight_voted_avg
drop temporary function wvoted_avg;
create temporary function wvoted_avg as 'hivemall.ensemble.bagging.WeightVotedAvgUDAF';

--------------------
-- misc functions --
--------------------

drop temporary function max_label;
create temporary function max_label as 'hivemall.ensemble.MaxValueLabelUDAF';

drop temporary function maxrow;
create temporary function maxrow as 'hivemall.ensemble.MaxRowUDAF';

drop temporary function argmin_kld;
create temporary function argmin_kld as 'hivemall.ensemble.ArgminKLDistanceUDAF';

-----------------------
-- hashing functions --
-----------------------

drop temporary function mhash;
create temporary function mhash as 'hivemall.ftvec.hashing.MurmurHash3UDF';

drop temporary function sha1;
create temporary function sha1 as 'hivemall.ftvec.hashing.Sha1UDF';

drop temporary function array_hash_values;
create temporary function array_hash_values as 'hivemall.ftvec.hashing.ArrayHashValuesUDF';

drop temporary function prefixed_hash_values;
create temporary function prefixed_hash_values as 'hivemall.ftvec.hashing.ArrayPrefixedHashValuesUDF';

-----------------------
-- scaling functions --
-----------------------

drop temporary function rescale;
create temporary function rescale as 'hivemall.ftvec.scaling.RescaleUDF';

-- for backword compatibility
drop temporary function rescale_fv;
create temporary function rescale_fv as 'hivemall.ftvec.scaling.RescaleUDF';

drop temporary function zscore;
create temporary function zscore as 'hivemall.ftvec.scaling.ZScoreUDF';

drop temporary function normalize;
create temporary function normalize as 'hivemall.ftvec.scaling.L2NormalizationUDF';

--------------------
-- misc functions --
--------------------

drop temporary function amplify;
create temporary function amplify as 'hivemall.ftvec.amplify.AmplifierUDTF';

drop temporary function rand_amplify;
create temporary function rand_amplify as 'hivemall.ftvec.amplify.RandomAmplifierUDTF';

drop temporary function conv2dense;
create temporary function conv2dense as 'hivemall.ftvec.ConvertToDenseModelUDAF';

-- for backward compatibility
drop temporary function addBias;
create temporary function addBias as 'hivemall.ftvec.AddBiasUDF';

drop temporary function add_bias;
create temporary function add_bias as 'hivemall.ftvec.AddBiasUDF';

-- for backward compatibility
drop temporary function sortByFeature;
create temporary function sortByFeature as 'hivemall.ftvec.SortByFeatureUDF';

drop temporary function sort_by_feature;
create temporary function sort_by_feature as 'hivemall.ftvec.SortByFeatureUDF';

drop temporary function extract_feature;
create temporary function extract_feature as 'hivemall.ftvec.ExtractFeatureUDF';

drop temporary function extract_weight;
create temporary function extract_weight as 'hivemall.ftvec.ExtractWeightUDF';

drop temporary function add_feature_index;
create temporary function add_feature_index as 'hivemall.ftvec.AddFeatureIndexUDF';

--------------------------
-- ftvec/text functions --
--------------------------

drop temporary function tf;
create temporary function tf as 'hivemall.ftvec.text.TermFrequencyUDAF';

drop temporary function tokenize;
create temporary function tokenize as 'hivemall.ftvec.text.TokenizeUDF';

--------------------------
-- Regression functions --
--------------------------

drop temporary function train_logregr;
create temporary function train_logregr as 'hivemall.regression.LogressUDTF';

drop temporary function train_pa1_regr;
create temporary function train_pa1_regr as 'hivemall.regression.PassiveAggressiveRegressionUDTF';

drop temporary function train_pa1a_regr;
create temporary function train_pa1a_regr as 'hivemall.regression.PassiveAggressiveRegressionUDTF$PA1a';

drop temporary function train_pa2_regr;
create temporary function train_pa2_regr as 'hivemall.regression.PassiveAggressiveRegressionUDTF$PA2';

drop temporary function train_pa2a_regr;
create temporary function train_pa2a_regr as 'hivemall.regression.PassiveAggressiveRegressionUDTF$PA2a';

drop temporary function train_arow_regr;
create temporary function train_arow_regr as 'hivemall.regression.AROWRegressionUDTF';

drop temporary function train_arowe_regr;
create temporary function train_arowe_regr as 'hivemall.regression.AROWRegressionUDTF$AROWe';

drop temporary function train_arowe2_regr;
create temporary function train_arowe2_regr as 'hivemall.regression.AROWRegressionUDTF$AROWe2';

drop temporary function train_adagrad;
create temporary function train_adagrad as 'hivemall.regression.AdaGradUDTF';

drop temporary function train_adadelta;
create temporary function train_adadelta as 'hivemall.regression.AdaDeltaUDTF';

-- alias for backward compatibility

drop temporary function logress;
create temporary function logress as 'hivemall.regression.LogressUDTF';

drop temporary function pa1_regress;
create temporary function pa1_regress as 'hivemall.regression.PassiveAggressiveRegressionUDTF';

drop temporary function pa1a_regress;
create temporary function pa1a_regress as 'hivemall.regression.PassiveAggressiveRegressionUDTF$PA1a';

drop temporary function pa2_regress;
create temporary function pa2_regress as 'hivemall.regression.PassiveAggressiveRegressionUDTF$PA2';

drop temporary function pa2a_regress;
create temporary function pa2a_regress as 'hivemall.regression.PassiveAggressiveRegressionUDTF$PA2a';

drop temporary function arow_regress;
create temporary function arow_regress as 'hivemall.regression.AROWRegressionUDTF';

drop temporary function arowe_regress;
create temporary function arowe_regress as 'hivemall.regression.AROWRegressionUDTF$AROWe';

drop temporary function arowe2_regress;
create temporary function arowe2_regress as 'hivemall.regression.AROWRegressionUDTF$AROWe2';

drop temporary function adagrad;
create temporary function adagrad as 'hivemall.regression.AdaGradUDTF';

drop temporary function adadelta;
create temporary function adadelta as 'hivemall.regression.AdaDeltaUDTF';

---------------------
-- array functions --
---------------------

-- alias for backward compatibility
drop temporary function AllocFloatArray;
create temporary function AllocFloatArray as 'hivemall.tools.array.AllocFloatArrayUDF';

drop temporary function float_array;
create temporary function float_array as 'hivemall.tools.array.AllocFloatArrayUDF';

drop temporary function array_remove;
create temporary function array_remove as 'hivemall.tools.array.ArrayRemoveUDF';

drop temporary function sort_and_uniq_array;
create temporary function sort_and_uniq_array as 'hivemall.tools.array.SortAndUniqArrayUDF';

drop temporary function subarray_endwith;
create temporary function subarray_endwith as 'hivemall.tools.array.SubarrayEndWithUDF';

drop temporary function subarray_startwith;
create temporary function subarray_startwith as 'hivemall.tools.array.SubarrayStartWithUDF';

drop temporary function collect_all;
create temporary function collect_all as 'hivemall.tools.array.CollectAllUDAF';

drop temporary function concat_array;
create temporary function concat_array as 'hivemall.tools.array.ConcatArrayUDF';

drop temporary function subarray;
create temporary function subarray as 'hivemall.tools.array.SubarrayUDF';

-- drop temporary function array_avg;
-- create temporary function array_avg as 'hivemall.tools.array.ArrayAvgUDAF';

drop temporary function array_avg;
create temporary function array_avg as 'hivemall.tools.array.ArrayAvgGenericUDAF';

---------------------
-- map functions --
---------------------

drop temporary function map_get_sum;
create temporary function map_get_sum as 'hivemall.tools.map.MapGetSumUDF';

drop temporary function map_tail_n;
create temporary function map_tail_n as 'hivemall.tools.map.MapTailNUDF';

drop temporary function to_map;
create temporary function to_map as 'hivemall.tools.map.UDAFToMap';

drop temporary function to_ordered_map;
create temporary function to_ordered_map as 'hivemall.tools.map.UDAFToOrderedMap';

---------------------
-- Math functions --
---------------------

drop temporary function sigmoid;
create temporary function sigmoid as 'hivemall.tools.math.SigmodUDF';

----------------------
-- mapred functions --
----------------------

drop temporary function taskid;
create temporary function taskid as 'hivemall.tools.mapred.TaskIdUDF';

drop temporary function jobid;
create temporary function jobid as 'hivemall.tools.mapred.JobIdUDF';

drop temporary function rowid;
create temporary function rowid as 'hivemall.tools.mapred.RowIdUDF';

drop temporary function distcache_gets;
create temporary function distcache_gets as 'hivemall.tools.mapred.DistributedCacheLookupUDF';

drop temporary function jobconf_gets;
create temporary function jobconf_gets as 'hivemall.tools.mapred.JobConfGetsUDF';

--------------------
-- misc functions --
--------------------

drop temporary function generate_series;
create temporary function generate_series as 'hivemall.tools.GenerateSeriesUDTF';

drop temporary function convert_label;
create temporary function convert_label as 'hivemall.tools.ConvertLabelUDF';

----------------------
-- string functions --
----------------------

-- alias for backward compatibility
drop temporary function isStopword;
create temporary function isStopword as 'hivemall.tools.string.StopwordUDF';

drop temporary function is_stopword;
create temporary function is_stopword as 'hivemall.tools.string.StopwordUDF';

drop temporary function split_words;
create temporary function split_words as 'hivemall.tools.string.SplitWordsUDF';

---------------------------------
-- Dataset generator functions --
---------------------------------

drop temporary function lr_datagen;
create temporary function lr_datagen as 'hivemall.dataset.LogisticRegressionDataGeneratorUDTF';

--------------------------
-- Evaluating functions --
--------------------------

drop temporary function f1score;
create temporary function f1score as 'hivemall.evaluation.FMeasureUDAF';

drop temporary function mae;
create temporary function mae as 'hivemall.evaluation.MeanAbsoluteErrorUDAF';

drop temporary function mse;
create temporary function mse as 'hivemall.evaluation.MeanSquaredErrorUDAF';

drop temporary function rmse;
create temporary function rmse as 'hivemall.evaluation.RootMeanSquaredErrorUDAF';

--------------------------
-- Matrix Factorization --
--------------------------

drop temporary function mf_predict;
create temporary function mf_predict as 'hivemall.mf.MFPredictionUDF';

drop temporary function train_mf_sgd;
create temporary function train_mf_sgd as 'hivemall.mf.MatrixFactorizationSGDUDTF';



